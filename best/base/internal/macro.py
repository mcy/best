#!/usr/bin/env python3
"""
Python script for generating horrible macros.
"""

def main():
  MAX = 64

  print("// Generated by map.py.")
  print(f"#define BEST_MAP_2_(...)")
  for i in range(1, MAX):
    args = "".join([f", _{j}" for j in range(0, i)])
    calls = " BEST_REMOVE_PARENS(sep_) ".join([f"MACRO(_{j})" for j in range(0, i)])
    print(f"#define BEST_MAP_{i+2}_(MACRO, sep_{args}) {calls}")

  print()
  print(f"#define BEST_IMAP_2_(...)")
  for i in range(1, MAX):
    args = "".join([f", _{j}" for j in range(0, i)])
    calls = " BEST_REMOVE_PARENS(sep_)  ".join([f"MACRO({j}, _{j})" for j in range(0, i)])
    print(f"#define BEST_IMAP_{i+2}_(MACRO, sep_{args}) {calls}")

  print()
  print(f"#define BEST_RTC_0_(_0)")
  for i in range(1, MAX):
    args = ", ".join([f"_{j}" for j in range(0, i+1)])
    outs = ", ".join([f"_{j}" for j in range(0, i)])
    print(f"#define BEST_RTC_{i}_({args}) {outs} BEST_RTC_LAST_(_{i})")

  macros = ", ".join([f"BEST_RTC_{i}_" for i in reversed(range(0, MAX-1))])
  print(f"#define BEST_RTC_SEQ_ {macros}")

  print()
  for i in range(0, MAX):
    args = ", ".join([f"_{j}" for j in range(0, i+1)])
    print(f"#define BEST_NTH_{i}({args}, ...) _{i}")

if __name__ == "__main__":
  main()